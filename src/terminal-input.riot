<terminal-input>
    <form name="i_input" class="full-width">
        <span class="text-green">guest@neon-viper:~$ </span>
        <span class="text-white">{state.display}
            <span class="cursor" if={ !state.nyan }>|</span>
            <img src="/assets/cursor-nyan.gif" width="32" height="22" if={state.nyan} />
        </span>
    </form>

    <style>

    </style>

    <script>
        export default {
            onMounted() {
                let lineCount = 0;
                document.addEventListener('keydown', e => {

                    if (e.key === "Enter") {
                        // If the user hasn't actually entered anything, return early
                        if (!this.state || !this.state.input.length) {
                            return;
                        }

                        // Used as in index - riot renders things faster with an index... somehow
                        lineCount++;

                        // onNewLine isn't defined here - it's passed in by app.riot as a prop
                        this.props.onNewLine(lineCount, this.state.display);
                        this.update({input: [], display: ""})

                        return;
                    }

                    let input = this.state.input;
                    if (e.key === "Backspace") {
                        input.pop();
                    } else if (e.key.length > 1) {
                        return;
                    } else {
                        input.push(e.key);
                    }

                    this.update({ input: input, display: input.join('') });
                    if (input.join('') === "nyan") {
                        this.update({ nyan: true })
                    }

                    if (input.join('') === "cursor") {
                        this.update({ nyan: false })
                    }
                });
            },
            state: {
                input: [],
                display: null,
                nyan: false
            },
            props: {} // Props must exist otherwise can't pass in a callback
        }
    </script>
</terminal-input>
